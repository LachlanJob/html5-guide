0. 大家好
---
1. html5 最近两三年 最火热的话题之一
2. 包括 IE 在内的浏览器厂商，不断添加 html5 的支持；
3. 移动互联网 智能手机的广泛支持。
---
1. 第5个修订版
2. 现在大家谈论的 html5，相关技术
3. 这些技术标准和规范，主要由两个组织维护
---
1. 简单回顾
2. 1990年，和万维网www一同诞生
3. 2000年 html 4.01 最后一次更新
4. 直到 04 年再无更新
5. w3c xhtml 2.0 => "X"
6. Opera / Mozilla / 苹果 等浏览器厂商 成立 WHATWG
7. 07年 走到一起
8. 08年 第一个公开工作草案
9. html5 标准进展迅速，草案一边制定、公开，厂商跟着在浏览器中增加新的特性，随后开发者在他们的网站上尝试新技术
---
1. html5 真正被大众熟知，是10年，乔布斯
2. 2个观点
3. 引起 html5 与 flash 的火热讨论
4. 11年底，抽调德州，flash，ActionScript，结合js的闭包特性，又有java的完全面向对象，以及package包引用的模式
5. 但是 flash 跟现在追求“开放”的web，已经渐行渐远
---
1. 12年 好基友分道扬镳了
2. 2 个都有自己的道理
3. 由于他们各自负责了 html5 不同部分的标准制定，所以对开发者来讲，没有太大的影响
---
1. 14年 w3c 最终推荐标准

======

0. 接下来 看看 html5 究竟涵盖了哪些新的特性
---
1. 最内圈 初始的工作草案
2. w3c 合作后
3. 相关技术
---
1. 标准制定进程 草案 => 最后一次电话 => 候选推荐 => 提案推荐 => w3c 推荐标准
2. 很多还在不断的 制定 和 完善 中

======

0. 我把 html5 大致分为了以下 几个方向
---
1. html 超文本标记语言，标记是基本
2. 语义化，还有新的表单元素、类型等
3. table 布局 => div + css => 语义化
4. 移除，交给css
---
1. 图形
2. WebGL => OpenGL库 与 js 的结合，实现强大的3d渲染。~~ 稍后有著名的开源js WebGL扩展库
---
1. 交互
---
1. 通信
2. 用于web的socket套接字
3. SSE
4. CDM 允许不同的文档（窗口）、不同域之间的页面通信
5. WebRTC 点对点的实时视频/语音通信。开发者=>简单的js接口，无须关注多媒体的信号处理和通信的过程
6. XHR2 增加了许多有用的特性
---
1. 读取、操作文件，甚至是管理本地目录和文件系统
---
1. Web 工人，web 线程，让一段js可以独立于页面、运行在后台、不影响页面ui渲染（不能调用dom接口）
2. js 与 dom 渲染 的单线程特性，难以进行 密集型 的计算
3. 同时使用多个 web worker 可以充分利用 多核心 cpu 硬件能力
5. Shared Worker，多个页面 共享一个 worker
---
1. 本地存储 => 存放简单的键值对 => 会话存储 持久存储
2. IndexedDB 用在浏览器端的 索引化数据库
3. App Cache 构建离线应用
---
1. 视频、音频 必不可少的功能
---
1. 其它
---
1. 前端开发者能做的事情 多了很多
---
1. 今天主要探讨 ...
2. 一些实例中 还将涉及到 ...

======

0. 图形与动画
---
1. 三种核心技术
2. Canvas 只 Canvas 2d
3. 没包括 WebGL
---
1. 首先 Canvas，第一个示例非常简单，但它包含了 canvas 主要的基本操作
2. Canvas 由 Canvas 元素 和 js 的渲染接口 组成
3. Canvas 元素 本身不具有绘图功能，它只是一张简单的画布
4. 它 的 渲染上下文对象 的js接口，就是它的颜料 和 画笔工具
5. 首先 获取 canvas 元素 ...
---
1. Canvas 提供了非常多的 图形处理 的底层接口
---
1. 接下来 看一个 更复杂、添加了动画的 例子
2. 我们来 描绘一个 看上去很幼稚的 二次元世界
3. 我们把 世界里的各个事物 逐步 分解成 独立的小元素
4. 世界由 天空、...
5. 天空由 蓝天 和 白云、...
6. ...
7. 每个子元素 与他的父元素 有固定的坐标转换
8. 同一类型的元素 绘制方法是一样的
9. 整个世界 的绘制，通过 各层级的 坐标转换 save => transform => restore 完成
10. 动画效果 如何实现的?
11. 随着时间的 推移，变换 各个元素的坐标转换值 来实现的
12. requestAnimationFrame

======

0. SVG
---
1. SVG 早在 2000 年 就出现了，在最近的html5时代中 引入到html中。矢量图形工具 很早就支持
2. ...
3. 可以作为一个img引用，也可以完全加入到html中
---
1. SVG的绘制 通过 标签 和 样式属性 来实现
---
1. 使用 svg 复现 刚刚的 canvas 实例
2. 写在标签里的 动画
3. 注意帧频较低
---
1. 内嵌到 html5，使用css keyframes 作动画
---
1. 对比

======

0. CSS3
---
1. 最后 演示 ppt 立方体
2. ~~ 停止

======

0. XHR2
---
1. AJAX 引领一代潮流的 前端技术，05年 google在 Maps Gmail 等应用中 率先采用，带来了在当时非凡的无刷新体验
---
1. 但是 它也有很多的弊端
---
1. xhr2 应运而生
---
1. esun.com 跨域请求 open.com ，上传一个图片，然后接收处理好的图片，支持过程中的进度显示
---
1. 代码

======

0. 拖放
---

======

0. WebSocket
---
1. http 的无状态 无连接 特性；
2. http 问答式
3. 如何实现 实时 B-S 双向通信
